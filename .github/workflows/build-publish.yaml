name: "Build and Publish"

# Trigger when commits are pushed to the master branch
on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 * * * *"
    
jobs:
  build-push:
    name: "Build and Publish Custom Caddy Version"
    runs-on: ubuntu-latest
    steps:
      
      - uses: actions/checkout@v2
      
      - uses: actions/setup-go@v2
        with:
          go-version: '~1.16'
      
      - name: install-xcaddy
        run: |
            curl -1sLf 'https://dl.cloudsmith.io/public/caddy/xcaddy/gpg.key' | sudo apt-key add -
            curl -1sLf 'https://dl.cloudsmith.io/public/caddy/xcaddy/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-xcaddy.list
            sudo apt update && sudo apt install xcaddy
      
      - name: build-custom-caddy
        run: |
            PATH=$PATH:/usr/local/go/bin xcaddy build --with github.com/caddy-dns/cloudflare --with github.com/mholt/caddy-l4
      
      - name: version
        run: echo "::set-output name=version::$(./caddy version | cut -d' ' -f1)"
        id: version

      - name: Build release notes
        run: echo "${{ github.sha }} of release ${{ steps.version.outputs.version }}" > RELEASE.txt

      - name: Show release notes
        run: cat RELEASE.txt

      - name: Release version
        uses: softprops/action-gh-release@v1
        #if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          files: |
            RELEASE.txt
            caddy

      # - name: upload amd binaries
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./caddy
      #     asset_name: caddy
      #     asset_content_type: application/octet-stream
      
      # - name: upload arm binaries
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./caddy-arm.tar.gz
      #     asset_name: caddy-arm.tar.gz
      #     asset_content_type: application/gzip
